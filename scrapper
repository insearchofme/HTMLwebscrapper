{
 "metadata": {
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3-final"
  },
  "orig_nbformat": 2,
  "kernelspec": {
   "name": "Python 3.8.3 64-bit ('base': conda)",
   "display_name": "Python 3.8.3 64-bit ('base': conda)",
   "metadata": {
    "interpreter": {
     "hash": "81699963715f7f4c544f978336e5916dc351c8c7d1869bbe8caf7f1b7ae92fbe"
    }
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2,
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "output_type": "stream",
     "name": "stdout",
     "text": "b'<html>\\r\\n<head>\\r\\n<meta http-equiv=\"Refresh\" content=\"1; URL=https://fuptopup.bsnl.co.in/dailyFupPlanRedirection.do\">\\r\\n<meta http-equiv=\"pragma\" content=\"no-cache\">\\r\\n</head>\\r\\n<body>\\r\\nPlease wait while you are redirected ...\\r\\n</body>\\r\\n</html>\\r\\n'\n"
    }
   ],
   "source": [
    "import requests\n",
    "import pandas as pd \n",
    "from bs4 import BeautifulSoup\n",
    "url=\"http://books.toscrape.com/\"\n",
    "r=requests.get(url)\n",
    "print(r.content)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "soup=BeautifulSoup(r.content,'html.parser')\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "output_type": "stream",
     "name": "stdout",
     "text": "[]\n"
    }
   ],
   "source": [
    "name_=[]\n",
    "price_=[]\n",
    "allbooks=soup.findAll('article',class_=\"product_pod\")\n",
    "for i in allbooks:\n",
    "    name=i.h3.a.get('title')\n",
    "    price=i.find('p',class_='price_colour').text.strip()\n",
    "    name_.append(name)\n",
    "    price_.append(price)\n",
    "\n",
    "\n",
    "\n",
    "    \n",
    "\n",
    "    \n",
    "  \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "output_type": "stream",
     "name": "stdout",
     "text": "Empty DataFrame\nColumns: [Name, Price]\nIndex: []\n"
    }
   ],
   "source": [
    "df=pd.DataFrame({\"Name\":name_,\"Price\":price_})\n",
    "print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ]
}